#!/usr/bin/python

import json
import math
from collections import OrderedDict
from bokeh.charts import Bar
from bokeh.plotting import *

data = json.load(open('../output/bucketed'))
pivot = {str(i): [] for i in range(10)}
ratings = []

for k,_v in sorted(data.items(), key=lambda t: t[0]):
    if int(k) < 1000:
        continue
    v = map(lambda x: math.log(x + 1), _v)
    s = sum(_v)
    ratings += [k]
    for i, count in enumerate(reversed(_v)):
        pivot[str(i)] += [float(count) / s]

total_moves = 0
two_pwn_blunders = 0
pawn3Blunders = {}
pawn6Blunders = {}

for rating, bVector in data.items():
    if int(rating) >= 2775:
        total_moves += sum(bVector)
        two_pwn_blunders += sum(bVector[2:])
    s = float(sum(bVector))
    pawn3Blunders[rating] = float(sum(bVector[3:])) / s
    pawn6Blunders[rating] = float(sum(bVector[6:])) / s

# later, we build a dict containing the grouped data
blunders = OrderedDict(sorted(pivot.items(), key=lambda t: t[0]))

#print blunders
#print ratings
print total_moves
print two_pwn_blunders
print 1 / ((float(two_pwn_blunders) / float(total_moves)) ** 2)

print "3 pawn blunders"
for k, v in sorted(pawn3Blunders.items(), key=lambda t: int(t[0])):
    print k, ", ", v, pawn6Blunders[k]

# figure(tools="pan,wheel_zoom,box_zoom,reset,previewsave",
#        y_axis_type="log", y_range=[0.0, 1], title="Blunders by rating.")
#
#
# bar = Bar(blunders, ratings , filename="blunders.html")
# bar.title("Blunders by Rating").xlabel("rating").ylabel("blunders")
# bar.legend(False).width(1200).height(800).stacked(True)
# bar.show()

